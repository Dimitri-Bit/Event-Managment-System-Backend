"""Add administrator

Revision ID: ffe0fae20d21
Revises: 602465645579
Create Date: 2025-04-07 11:17:19.671346

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from model.user_model import User
from util.password_manager import PasswordManager

# revision identifiers, used by Alembic.
revision: str = 'ffe0fae20d21'
down_revision: Union[str, None] = '602465645579'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
password_manager = PasswordManager()

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('permissions', 'description',
               existing_type=mysql.VARCHAR(length=40),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('roles', 'description',
               existing_type=mysql.VARCHAR(length=40),
               type_=sa.String(length=255),
               existing_nullable=True)

    op.bulk_insert(
        sa.table("users", sa.Column("email"), sa.Column("username"), sa.Column("password")),
        [
            {"email": "admin@admin.com", "username": "admin", "password": password_manager.get_password_hash("admin123")}
        ]
    )


    query = op.execute(sa.select(User).filter(User.email == "admin@admin.com"))
    admin_user = query.scalar()
    admin_user_id = admin_user.id

    op.bulk_insert(
        sa.table("role_user", sa.Column("role_id"), sa.Column("user_id")),
        [
            {"role_id": 2, "user_id": admin_user_id}
        ]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('roles', 'description',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=40),
               existing_nullable=True)
    op.alter_column('permissions', 'description',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=40),
               existing_nullable=True)
    # ### end Alembic commands ###
